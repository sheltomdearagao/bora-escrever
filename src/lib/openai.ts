import OpenAI from 'openai';

if (!process.env.OPENAI_API_KEY) {
  throw new Error('OPENAI_API_KEY is not defined in environment variables');
}

export const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// Configura√ß√µes espec√≠ficas para MarIA
export const MARIA_CONFIG = {
  model: 'gpt-4o-mini',
  temperature: 0.7,
  max_tokens: 1000,
  systemPrompt: `Voc√™ √© MarIA, uma assistente virtual especializada em reda√ß√£o ENEM e educa√ß√£o brasileira. Suas caracter√≠sticas:

PERSONALIDADE:
- Amig√°vel, motivadora e paciente
- Usa linguagem jovem e acess√≠vel
- Sempre positiva e encorajadora
- Especialista em ENEM e reda√ß√£o

CONHECIMENTOS:
- Estrutura da reda√ß√£o ENEM (introdu√ß√£o, desenvolvimento, conclus√£o)
- Compet√™ncias avaliadas no ENEM
- Temas frequentes e tend√™ncias
- Repert√≥rios socioculturais brasileiros
- Gram√°tica e norma culta
- T√©cnicas de argumenta√ß√£o

FUN√á√ïES:
- Corrigir reda√ß√µes com feedback detalhado
- Sugerir melhorias espec√≠ficas
- Explicar conceitos de reda√ß√£o
- Fornecer repert√≥rios relevantes
- Motivar e orientar estudos
- Responder d√∫vidas sobre ENEM

ESTILO DE RESPOSTA:
- Use emojis moderadamente
- Seja espec√≠fica e pr√°tica
- D√™ exemplos concretos
- Mantenha tom motivacional
- Estruture respostas de forma clara

Sempre termine suas respostas perguntando se o estudante tem mais d√∫vidas ou precisa de ajuda adicional.`,
};

// Fun√ß√£o para gerar resposta da MarIA
interface ChatMessage {
  role: 'system' | 'user' | 'assistant';
  content: string;
}

export async function generateMariaResponse(
  userMessage: string,
  conversationHistory: ChatMessage[] = []
) {
  try {
    const messages: ChatMessage[] = [
      { role: 'system', content: MARIA_CONFIG.systemPrompt },
      ...conversationHistory,
      { role: 'user', content: userMessage },
    ];

    const completion = await openai.chat.completions.create({
      model: MARIA_CONFIG.model,
      messages: messages,
      temperature: MARIA_CONFIG.temperature,
      max_tokens: MARIA_CONFIG.max_tokens,
    });

    return (
      completion.choices[0]?.message?.content ||
      'Desculpe, n√£o consegui processar sua mensagem. Tente novamente!'
    );
  } catch (error) {
    console.error('Erro ao gerar resposta da MarIA:', error);
    throw new Error('Erro interno do servidor. Tente novamente em alguns instantes.');
  }
}

// Fun√ß√£o espec√≠fica para corre√ß√£o de reda√ß√µes
export async function correctEssay(essayText: string) {
  try {
    const correctionPrompt = `Analise esta reda√ß√£o ENEM e forne√ßa uma corre√ß√£o detalhada:

REDA√á√ÉO:
${essayText}

FORNE√áA:
1. NOTA ESTIMADA (0-1000) para cada compet√™ncia:
   - C1: Norma culta (0-200)
   - C2: Compreens√£o do tema (0-200)
   - C3: Argumenta√ß√£o (0-200)
   - C4: Coes√£o/Coer√™ncia (0-200)
   - C5: Proposta de interven√ß√£o (0-200)

2. PONTOS POSITIVOS (3-5 itens)

3. PONTOS A MELHORAR (3-5 itens espec√≠ficos)

4. SUGEST√ïES PR√ÅTICAS para cada compet√™ncia

5. NOTA FINAL estimada

Seja espec√≠fica, construtiva e motivadora! üìù‚ú®`;

    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        { role: 'system', content: MARIA_CONFIG.systemPrompt },
        { role: 'user', content: correctionPrompt },
      ],
      temperature: 0.3, // Mais determin√≠stica para corre√ß√µes
      max_tokens: 1500,
    });

    return completion.choices[0]?.message?.content || 'Erro ao processar corre√ß√£o.';
  } catch (error) {
    console.error('Erro ao corrigir reda√ß√£o:', error);
    throw new Error('Erro ao processar corre√ß√£o. Tente novamente.');
  }
}

// Fun√ß√£o para sugerir repert√≥rios
export async function suggestRepertoire(theme: string) {
  try {
    const repertoirePrompt = `Sugira repert√≥rios socioculturais relevantes para o tema: "${theme}"

FORNE√áA:
1. DADOS ESTAT√çSTICOS (3 dados com fontes)
2. REFER√äNCIAS HIST√ìRICAS (2-3 exemplos)
3. OBRAS CULTURAIS (livros, filmes, m√∫sicas)
4. PERSONALIDADES RELEVANTES
5. LEGISLA√á√ÉO/POL√çTICAS P√öBLICAS
6. EXEMPLOS INTERNACIONAIS

Para cada item, explique COMO usar na reda√ß√£o de forma pr√°tica.`;

    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        { role: 'system', content: MARIA_CONFIG.systemPrompt },
        { role: 'user', content: repertoirePrompt },
      ],
      temperature: 0.5,
      max_tokens: 1200,
    });

    return completion.choices[0]?.message?.content || 'Erro ao gerar repert√≥rios.';
  } catch (error) {
    console.error('Erro ao sugerir repert√≥rios:', error);
    throw new Error('Erro ao gerar repert√≥rios. Tente novamente.');
  }
}
